---
# sistema/tasks/04-asdf-shims.yaml

# Dependências específicas para os plugins
- name: Instala dependências dos plugins do ASDF
  ansible.builtin.apt:
    name:
      # Dependências específicas para Ruby
      - libffi-dev
      - libyaml-dev
      - libgmp-dev
      - libxml2-dev
      - libxslt1-dev
      # Dependências para NodeJS
      - dirmngr
      - gpg
    state: present
  become: true

- name: Define ASDF_DATA_DIR
  ansible.builtin.set_fact:
    asdf_data_dir: "{{ ansible_env.HOME }}/.asdf"
  become: false

# Instala plugins
- name: Adiciona plugin do Java
  ansible.builtin.shell: |
    export ASDF_DATA_DIR="{{ asdf_data_dir }}"
    export PATH="$HOME/bin:$PATH"
    asdf plugin add java || true
  args:
    executable: /bin/bash
  register: java_plugin
  changed_when: java_plugin.rc == 0 and 'already added' not in java_plugin.stdout
  become: false

- name: Adiciona plugin do Maven
  ansible.builtin.shell: |
    export ASDF_DATA_DIR="{{ asdf_data_dir }}"
    export PATH="$HOME/bin:$PATH"
    asdf plugin add maven || true
  args:
    executable: /bin/bash
  register: maven_plugin
  changed_when: maven_plugin.rc == 0 and 'already added' not in maven_plugin.stdout
  become: false

- name: Adiciona plugin do Ruby
  ansible.builtin.shell: |
    export ASDF_DATA_DIR="{{ asdf_data_dir }}"
    export PATH="$HOME/bin:$PATH"
    asdf plugin add ruby || true
  args:
    executable: /bin/bash
  register: ruby_plugin
  changed_when: ruby_plugin.rc == 0 and 'already added' not in ruby_plugin.stdout
  become: false

# Instala versões do Java
- name: Instala versões do Java via ASDF
  ansible.builtin.shell: |
    export ASDF_DATA_DIR="{{ asdf_data_dir }}"
    export PATH="$ASDF_DATA_DIR/shims:$HOME/bin:$PATH"
    asdf install java {{ item }}
  loop: "{{ versoes_java_asdf }}"
  args:
    executable: /bin/bash
  register: java_install
  changed_when: java_install.rc == 0 and 'is already installed' not in java_install.stdout
  become: false

- name: Define versão do Java
  ansible.builtin.shell: |
    export ASDF_DATA_DIR="{{ asdf_data_dir }}"
    export PATH="$ASDF_DATA_DIR/shims:$HOME/bin:$PATH"
    asdf set --home java {{ java_default_asdf }}
  args:
    executable: /bin/bash
  register: java_global
  changed_when: java_global.rc == 0
  become: false

# Instala Maven
- name: Instala versão do Maven via ASDF
  ansible.builtin.shell: |
    export ASDF_DATA_DIR="{{ asdf_data_dir }}"
    export PATH="$ASDF_DATA_DIR/shims:$HOME/bin:$PATH"
    asdf install maven {{ versao_maven }}
  args:
    executable: /bin/bash
  register: maven_install
  changed_when: maven_install.rc == 0 and 'is already installed' not in maven_install.stdout
  become: false

- name: Define versão do Maven
  ansible.builtin.shell: |
    export ASDF_DATA_DIR="{{ asdf_data_dir }}"
    export PATH="$ASDF_DATA_DIR/shims:$HOME/bin:$PATH"
    asdf set --home maven {{ versao_maven }}
  args:
    executable: /bin/bash
  register: maven_global
  changed_when: maven_global.rc == 0
  become: false

# Instala Ruby
- name: Instala versão do Ruby via ASDF
  ansible.builtin.shell: |
    export ASDF_DATA_DIR="{{ asdf_data_dir }}"
    export PATH="$ASDF_DATA_DIR/shims:$HOME/bin:$PATH"
    asdf install ruby {{ versao_ruby }}
  args:
    executable: /bin/bash
  register: ruby_install
  changed_when: ruby_install.rc == 0 and 'is already installed' not in ruby_install.stdout
  become: false

- name: Define versão do Ruby
  ansible.builtin.shell: |
    export ASDF_DATA_DIR="{{ asdf_data_dir }}"
    export PATH="$ASDF_DATA_DIR/shims:$HOME/bin:$PATH"
    asdf set --home ruby {{ versao_ruby }}
  args:
    executable: /bin/bash
  register: ruby_global
  changed_when: ruby_global.rc == 0
  become: false

# Instala Ruby on Rails via gem
- name: Instala Rails via gem
  ansible.builtin.shell: |
    export ASDF_DATA_DIR="{{ asdf_data_dir }}"
    export PATH="$ASDF_DATA_DIR/shims:$HOME/bin:$PATH"
    # Atualiza o RubyGems primeiro
    gem update --system
    # Instala o bundler primeiro
    gem install bundler
    # Instala Rails
    gem install rails -v {{ versao_rails }}
  args:
    executable: /bin/bash
  register: rails_install
  changed_when: rails_install.rc == 0 and 'Successfully installed rails' in rails_install.stdout
  become: false
  notify: Reshim

# Acionamento dos handlers após as instalações
- name: Handlers para reshim
  ansible.builtin.meta: flush_handlers
