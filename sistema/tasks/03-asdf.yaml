---
# sistema/tasks/03-asdf.yaml

- name: Instalação do ASDF-VM
  become: false
  tags: asdf
  block:
    - name: Instala dependências do ASDF
      become: true
      ansible.builtin.apt:
        name:
          - curl
          - git
          - unzip
          - build-essential
          - autoconf
          - libssl-dev
          - libncurses5-dev
          - libreadline-dev
          - libbz2-dev
          - libsqlite3-dev
          - zlib1g-dev
          # Dependências específicas para Ruby
          - libffi-dev
          - libyaml-dev
          - libgmp-dev
          - libxml2-dev
          - libxslt1-dev
        state: present

    - name: Verifica se ASDF já está instalado
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/.asdf/asdf.sh"
      register: asdf_init

    - name: Clona repositório do ASDF
      ansible.builtin.git:
        repo: "https://github.com/asdf-vm/asdf.git"
        dest: "{{ ansible_env.HOME }}/.asdf"
        version: "{{ versao_asdf }}"
      when: not asdf_init.stat.exists

    - name: Adiciona configuração do ASDF ao .bashrc
      ansible.builtin.blockinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        marker: "# {mark} ASDF CONFIGURATION"
        block: |
          # ASDF Version Manager
          . $HOME/.asdf/asdf.sh
          . $HOME/.asdf/completions/asdf.bash
        state: present
      when: not asdf_init.stat.exists

    # Instala plugins
    - name: Adiciona plugin do Java
      ansible.builtin.shell: |
        source {{ ansible_env.HOME }}/.asdf/asdf.sh
        asdf plugin add java || true
      args:
        executable: /bin/bash
      register: java_plugin
      changed_when: java_plugin.rc == 0

    - name: Adiciona plugin do Ruby
      ansible.builtin.shell: |
        source {{ ansible_env.HOME }}/.asdf/asdf.sh
        asdf plugin add ruby || true
      args:
        executable: /bin/bash
      register: ruby_plugin
      changed_when: ruby_plugin.rc == 0

    # Instala versões do Java
    - name: Instala versões do Java via ASDF
      ansible.builtin.shell: |
        source {{ ansible_env.HOME }}/.asdf/asdf.sh
        asdf install java {{ item }}
      loop: "{{ versoes_java_asdf }}"
      args:
        executable: /bin/bash
      register: java_install
      changed_when: java_install.rc == 0 and 'is already installed' not in java_install.stdout

    - name: Define versão global do Java
      ansible.builtin.shell: |
        source {{ ansible_env.HOME }}/.asdf/asdf.sh
        asdf global java {{ java_default_asdf }}
      args:
        executable: /bin/bash
      register: java_global
      changed_when: java_global.rc == 0

    # Instala Ruby por compilação
    - name: Instala versão do Ruby via ASDF
      ansible.builtin.shell: |
        source {{ ansible_env.HOME }}/.asdf/asdf.sh
        asdf install ruby {{ versao_ruby }}
      args:
        executable: /bin/bash
      register: ruby_install
      changed_when: ruby_install.rc == 0 and 'is already installed' not in ruby_install.stdout

    - name: Define versão global do Ruby
      ansible.builtin.shell: |
        source {{ ansible_env.HOME }}/.asdf/asdf.sh
        asdf global ruby {{ versao_ruby }}
      args:
        executable: /bin/bash
      register: ruby_global
      changed_when: ruby_global.rc == 0

    # Instala Rails via gem
    - name: Instala Rails via gem
      ansible.builtin.shell: |
        source {{ ansible_env.HOME }}/.asdf/asdf.sh
        # Atualiza o RubyGems primeiro
        gem update --system
        # Instala o bundler primeiro
        gem install bundler
        # Instala Rails
        gem install rails -v {{ versao_rails }}
      args:
        executable: /bin/bash
      register: rails_install
      changed_when: rails_install.rc == 0 and 'Successfully installed rails' in rails_install.stdout
